<?php


/////////
///////////// MENU
/////////
//////////////////////////////////////////////////////////////////////////////
function queen_attack_menu() {
  $items['queen_attack'] = array(
    'title' => 'Queen Attack',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('queen_attack_form'),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  $items['queen_attack_results_page'] = array(
    'title' => 'Results',
    'page callback' => 'queen_attack_results',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function queen_attack_form() {
  $form['queen_coordinates'] = array(
    '#title' => 'Queen Column',
    '#type' => 'textfield',
    '#description' => t('Please input the column of the queen'),
    '#element_validate' => array('element_validate_char', 'element_validate_location'),
    '#required' => TRUE,
  );

  $form['attack_coordinates'] = array(
    '#title' => 'Attacked Column',
    '#type' => 'textfield',
    '#description' => t('Please input the column of the piece to attack'),
    '#element_validate' => array('element_validate_char', 'element_validate_location'),
    '#required' => TRUE,
  );

  $form['submit'] = array(
      '#type' => 'submit',
      '#value' => 'Go',
    );
  return $form;
}


////////////
///////////////////FORM VALIDATION
////////////
///////////////////////////////////////////////////////////////////////////////
function element_validate_char($element) {
  if (strlen($element['#value']) != 2) {
    form_error($element, t('Please enter the two character coordinates of each piece!'));
  }
  if (!preg_match("/[a-h]/", $element['#value']) || !preg_match("/[1-8]/", $element['#value'][1])) {
    form_error($element, t('Enter valid coordinates!'));
  }
}

function element_validate_location($element, &$form_state) {
  if ($form_state['values']['queen_coordinates'] === $form_state['values']['attack_coordinates']) {
    form_error($element, t('The queen can not attack a piece it is on!'));
  }
}

////////////
////////////////////////// FORM SUBMIT
///////////
///////////////////////////////////////////////////////////////////////////////
function queen_attack_form_submit($form, &$form_state) {
  $queen_coordinates = $form_state['values']['queen_coordinates'];
  $attack_coordinates = $form_state['values']['attack_coordinates'];

  $queen_array = str_split(strtolower($queen_coordinates));
  $attack_array = str_split(strtolower($attack_coordinates));


  $letter_values = array('a' => 1, 'b' => 2, 'c' => 3, 'd' => 4, 'e' => 5, 'f' => 6, 'g' => 7, 'h' => 8);

  $queen_column = $letter_values[$queen_array[0]];
  $queen_row = $queen_array[1];

  $attack_column = $letter_values[$attack_array[0]];
  $attack_row = $attack_array[1];



  if(($queen_column === $attack_column) || ($queen_row === $attack_row)) {
    $result = true;
  } elseif(abs($queen_column-$attack_column) === abs($queen_row-$attack_row)) {
    $result = true;
  } else {
    $result = false;
  }

  $_SESSION['queen_attack_output'] = $result;
  $form_state['redirect'] = 'queen_attack_results_page';
}

/////////////////
////////////////////// FORM RESULTS
////////////////
///////////////////////////////////////////////////////////////////////////////
function queen_attack_results() {
  $result_display = $_SESSION['queen_attack_output'];
  if($result_display === TRUE) {
    return '<p>The queen can attack that piece!</p>';
  } else {
    return '<p>The queen cannot attack that piece!</p>';
  }
}
